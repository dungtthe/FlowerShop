@model IEnumerable<FlowerShop.DataAccess.Models.AppUser>
@using FlowerShop.Common.Helpers;
@{
	ViewData["Title"] = "Danh sách khách hàng";
	int stt = 1;
}
<style>
	tbody tr {
		cursor: pointer; /* Thay đổi con trỏ chuột thành kiểu pointer */
	}

		tbody tr:hover {
			background-color: #f0f8ff; /* Màu nền nhạt khi lướt qua */
		}
</style>

<h1>Danh sách khách hàng</h1>
<div class="mb-3" style="position: relative; width: 440px;">
	<input type="text" id="searchBox"
		   class="form-control pr-5"
		   placeholder="Nhập tên khách hàng hoặc số điện thoại để tìm kiếm"
		   oninput="searchOrders()" />
	<i class="fa fa-search" style="position: absolute; top: 50%; right: 10px; transform: translateY(-50%); color: gray;"></i>
</div>
<table class="table">
	<thead>
		<tr>
			<th style="width: 20px">
				STT
			</th>
			<th style="width: 200px">
				Tên khách hàng
			</th>
			<th>
				Ngày sinh
			</th>
			<th>
				Đã khóa
			</th>
			<th style="width: 140px">
				SĐT
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model)
		{
			<tr ondblclick="openModal('@item.UserName')">
				<td>
					@(stt++)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.FullName)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.BirthDay)
				</td>
				<td class="is-lock" data-is-lock="@item.IsLock">
					@if (item.IsLock)
					{
						<i class="fa-solid fa-lock icon-lock" style="color: red"></i>
					}
					else
					{
						<i class="fa-solid fa-unlock icon-unlock" style="color: green;"></i>
					}
				</td>

				<td>
					@Html.DisplayFor(modelItem => item.PhoneNumber)
				</td>
				<td>
					<a asp-action="Edit"
					   asp-area="Admin"
					   asp-controller="Customer"
					   asp-route-id="@item.Id"
					   data-toggle="tooltip"
					   title="Sửa thông tin">
						<i class="fa-solid fa-pencil" style="color: #FFCC99;"></i>
					</a> |

					<!-- Nút khóa -->
					<button data-username="@item.UserName"
							onclick="LockCustomer('@item.UserName')"
							class="bg-transparent"
							style="border: none;"
							data-toggle="tooltip"
							title="Khóa tài khoản">
						@if (item.IsLock)
						{
							<i class="fa-solid fa-lock" style="color:red;"></i>
						}
						else
						{
							<i class="fa-solid fa-unlock" style="color:green;"></i>
						}
					</button>
				</td>
			</tr>
		}
	</tbody>
</table>

<!-- Modal -->
<div class="modal fade" id="customerModal" tabindex="-1" aria-labelledby="customerModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<!-- Tiêu đề modal -->
			<div class="modal-header">
				<h5 class="modal-title" id="customerModalLabel">Thông tin khách hàng</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Đóng">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<!-- Nội dung modal -->
			<div class="modal-body">
				<div id="modalCustomerImageWrapper" style="text-align: center;">
					<img id="modalCustomerImage" src="" alt="Ảnh tài khoản khách hàng"
						 style="width: 150px; height: 150px; object-fit: cover; border-radius: 50%; border: 4px solid #ccc;" />
				</div>

				<p><strong>Tên khách hàng:</strong> <span id="modalCustomerName"></span></p>
				<p><strong>Tuổi:</strong> <span id="modalAge"></span></p>
				<p><strong>Email:</strong> <span id="modalEmail"></span></p>
				<p><strong>Số điện thoại:</strong> <span id="modalPhone"></span></p>
				<p><strong>Tài khoản:</strong> <span id="modalStatus"></span></p>

			</div>
			<!-- Footer modal -->
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
			</div>
		</div>
	</div>
</div>

<script>
	//Lấy username khách hàng được chọn
	const getIsLockValue = (username) => {
		const button = document.querySelector(`button[data-username="${username}"]`);
		if (button) {
			const tr = button.closest('tr');
			if (tr) {
				const isLockCell = tr.querySelector('.is-lock');
				if (isLockCell) {
					const hasLockIcon = isLockCell.querySelector('.icon-lock') !== null;
					return hasLockIcon;
				}
			}
		}
		return null; // Trường hợp không tìm thấy
	};

	// Hàm để khóa khách hàng
	const LockCustomer = (username) => {
		const currentIsLock = getIsLockValue(username);
		if (currentIsLock === true) {
			showError("Tài khoản đã bị khóa.");
			return;
		}

		showConfirm("Bạn có muốn tài khoản này không?", () => {
			const reqData = { username: username };
			fetchPost(
				`/api/admin/quan-li-khach-hang/lock/${username}`,
				reqData,
				(response) => {
					// Cập nhật view
					const iconCell = document.querySelector(`button[data-username="${username}"]`)
						.closest('tr')
						.querySelector('.is-lock');
					if (iconCell) {
						iconCell.innerHTML = '<i class="fa-solid fa-lock icon-lock" style="color:red"></i>';
						iconCell.setAttribute('data-is-lock', 'true');
					}
					// Cập nhật icon của nút khóa
					const lockButton = document.querySelector(`button[data-username="${username}"]`);
					if (lockButton) {
						lockButton.innerHTML = '<i class="fa-solid fa-lock" style="color:red;"></i>';
					}
					setTimeout(() => {
						showSuccess(response.message);
					}, 500);
				},
				(respone) => {
					showError(respone.message);
				},
				() => {
					showError("Có lỗi xảy ra khi kết nối đến máy chủ.");
				}
			);
		});
	};

	const searchOrders = () => {
		const query = document.getElementById("searchBox").value.toLowerCase(); // Lấy giá trị tìm kiếm và chuyển thành chữ thường
		const rows = document.querySelectorAll("tbody tr"); // Lấy tất cả các dòng trong bảng

		rows.forEach(row => {
			const sDT = row.querySelector("td:nth-child(5)").innerText.toLowerCase(); // Lấy mã đơn hàng
			const customerName = row.querySelector("td:nth-child(2)").innerText.toLowerCase(); // Lấy tên khách hàng

			// Kiểm tra xem mã đơn hàng hoặc tên khách hàng có chứa chuỗi tìm kiếm hay không
			if (sDT.includes(query) || customerName.includes(query)) {
				row.style.display = ""; // Hiển thị dòng
			} else {
				row.style.display = "none"; // Ẩn dòng
			}
		});
	};

	//Mở viewModal
	const openModal = (username) => {
		const row = document.querySelector(`tr[ondblclick="openModal(${username})"]`);
		if (row) {
			row.style.backgroundColor = "#f0f8ff"; // Màu nhạt báo hiệu
			setTimeout(() => {
				row.style.backgroundColor = ""; // Khôi phục màu ban đầu
			}, 2000);
		}
		fetchGet(`/api/admin/quan-li-khach-hang/chi-tiet-khach-hang/${username}`,
			(data) => {
				console.log(data);
				showModalWithData(data);
			},
			(error) => {
				showError(error.message);
			},
			() => {
				showError("Có lỗi xảy ra khi kết nối đến máy chủ.");
			}
		);
	};

	const showModalWithData = (data) => {
		// Kiểm tra nếu data là mảng thì lấy phần tử đầu tiên
		const customer = Array.isArray(data) ? data[0] : data;

		// Xử lý giá trị images
		let images;
		try {
			if (customer.images && customer.images.startsWith("[")) {
				// Nếu là JSON hợp lệ (mảng), giải mã
				images = JSON.parse(customer.images);
			} else {
				// Nếu không, coi chuỗi là tên ảnh
				images = [customer.images];
			}
		} catch (error) {
			console.error("Error parsing images JSON:", error);
			images = ["no_img.png"]; // Sử dụng ảnh mặc định nếu lỗi
		}
		console.log("Images array:", images);

		// Lấy hình ảnh đầu tiên
		const firstImage = images[0] || "no_img.png";
		console.log("First image:", firstImage);

		// Cập nhật hình ảnh trong modal
		const customerImage = document.getElementById("modalCustomerImage");
		customerImage.src = `/images/users/${firstImage}`;
		customerImage.alt = customer.FullName;
		console.log("Image URL:", customerImage.src);

		// Tính toán tuổi từ ngày sinh
		const birthDate = new Date(customer.birthDay); // Convert BirthDay sang kiểu Date
		const today = new Date();
		let age = today.getFullYear() - birthDate.getFullYear(); // Tính tuổi theo năm

		// Kiểm tra nếu chưa qua sinh nhật trong năm nay
		const monthDiff = today.getMonth() - birthDate.getMonth();
		if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {
			age--; // Giảm tuổi nếu chưa qua sinh nhật
		}

		// Hiển thị dữ liệu trong modal
		document.getElementById('modalCustomerName').innerText = customer.fullName;
		document.getElementById('modalAge').innerText = age;
		document.getElementById('modalEmail').innerText = customer.email;
		document.getElementById('modalPhone').innerText = customer.phoneNumber;
		document.getElementById('modalStatus').innerText = customer.isLock ? "Đã khóa" : "Còn hoạt động";

		// Hiển thị modal
		$('#customerModal').modal('show');

	};

	// Ngăn chặn sự kiện double-click trên các nút và liên kết trong dòng
	document.querySelectorAll('table tr td button, table tr td a').forEach(element => {
		element.addEventListener('dblclick', (event) => {
			event.stopPropagation();
		});
	});
</script>