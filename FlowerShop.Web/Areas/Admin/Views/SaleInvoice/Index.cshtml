@model IEnumerable<FlowerShop.DataAccess.Models.SaleInvoice>

@{
	ViewData["Title"] = "Chờ xác nhận";
}

<h1>Danh sách đơn hàng chờ xác nhận</h1>

<table class="table">
	<thead>
		<tr>
			<th>
				Mã đơn hàng
			</th>
			<th>
				Tên khách hàng
			</th>
			<th>
				Ngày tạo hóa đơn
			</th>
			<th>
				Phương thức thanh toán
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model)
		{
			<tr id="hoadon-row-@item.Id">
				<td class="text-center" style="padding-right:60px">
					<!-- Thêm sự kiện click vào mã đơn hàng -->
					<a href="javascript:void(0);" onclick="ShowOrderDetails(@item.Id)">
						@Html.DisplayFor(modelItem => item.Id)
					</a>
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Customer.FullName)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.CreateDay)
				</td>

				<td>
					@Html.DisplayFor(modelItem => item.PaymentMethod.Name)
				</td>
				<td>
					<!-- Nút xác nhận -->
					<button onclick="ConfirmInvoiceById(@item.Id)"
							class="btn btn-success btn-sm"
							data-toggle="tooltip"
							style="width: 95px;"
							title="Xác nhận đơn hàng">
						<i class="fa-solid fa-check"></i> Xác nhận
					</button>
					<!-- Khoảng cách giữa các nút -->
					<span style="margin: 0 5px;"></span>
					<!-- Nút húy hóa đơn -->
					<button onclick="CancelInvoiceById(@item.Id)"
							class="btn btn-danger btn-sm"
							data-toggle="tooltip"
							style="width: 95px;"
							title="Hủy đơn hàng">
						<i class="fa-solid fa-trash"></i> Hủy
					</button>
				</td>
			</tr>
		}
	</tbody>
</table>

<!-- Modal Hiển Thị Chi Tiết Đơn Hàng -->
<div class="modal fade" id="orderDetailsModal" tabindex="-1" role="dialog" aria-labelledby="orderDetailsModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-lg" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title w-100 text-center">
					Chi Tiết Đơn Hàng
				</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Đóng">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body">
				<!-- Nội dung chi tiết đơn hàng sẽ được chèn vào đây qua JavaScript -->
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
			</div>
		</div>
	</div>
</div>

<script>
	// Hàm xác nhận hóa đơn
	const ConfirmInvoiceById = (id) => {
		showConfirm("Xác nhận chuyển đơn hàng sang trạng thái đã xác nhận?", () => {
			const reqData = { id: id };

			fetchPost('/api/admin/quan-li-don-hang/cho-xac-nhan', reqData,
				(response) => {
					if (response.success) {
						// Xóa dòng trong bảng
						const row = document.getElementById('hoadon-row-' + id);
						if (row) {
							row.remove();
						}
						setTimeout(() => {
							showSuccess(response.message);
						}, 500);
					} else {
						showError(response.message);
					}
				},
				() => {
					showError("Có lỗi xảy ra khi kết nối đến máy chủ.");
				}
			);
		});
	};

	// Hàm hủy hóa đơn
	const CancelInvoiceById = (id) => {
		showConfirm("Xác nhận hủy đơn hàng?", () => {
			const reqData = { id: id };

			fetchPost('/api/admin/quan-li-don-hang/huy', reqData,
				(response) => {
					if (response.success) {
						// Xóa dòng trong bảng
						const row = document.getElementById('hoadon-row-' + id);
						if (row) {
							row.remove();
						}
						setTimeout(() => {
							showSuccess(response.message);
						}, 500);
					} else {
						showError(response.message);
					}
				},
				() => {
					showError("Có lỗi xảy ra khi kết nối đến máy chủ.");
				}
			);
		});
	};

	function ShowOrderDetails(orderId) {
		if (!orderId) {
			showError("Không tìm thấy đơn hàng");
			return;
		}
		try {
			// Lấy thông tin từ row được chọn
			const row = document.querySelector(`#hoadon-row-${orderId}`);
			const customerName = row.querySelector('td:nth-child(2)').innerText; // Tên khách hàng
			const createDate = row.querySelector('td:nth-child(3)').innerText;  // Ngày tạo hóa đơn

			fetchGet(`/api/admin/quan-li-don-hang/chi-tiet-don-hang/${orderId}`,
				(response) => {
					console.log(response);

					if (response.length > 0) {
						// Hiển thị tên khách hàng và ngày tạo hóa đơn
						let modalContent = `
										<p><strong>Tên khách hàng:</strong> ${customerName}</p>
										<p><strong>Ngày tạo hóa đơn:</strong> ${createDate}</p>
										<hr>
										<p style="font-size: 20px; text-align: center; font-weight: bold;">
											Danh sách các sản phẩm</p>
											<table class="table table-bordered">
											<thead>
												<tr>
													<th>Mã Sản Phẩm</th>
													<th>Tên Sản Phẩm</th>
													<th>Số Lượng</th>
													<th>Giá</th>
													<th>Thành Tiền</th>
												</tr>
											</thead>
											<tbody>
									`;

						// Tính tổng tiền cho tất cả sản phẩm
						let total = 0;

						// Lặp qua từng sản phẩm để tạo nội dung bảng
						response.forEach(item => {
							let thanhTien = item.unitPrice * item.quantity; // Thành tiền cho từng sản phẩm
							total += thanhTien; // Cộng dồn tổng tiền

							modalContent += `
											<tr>
												<td>${item.productId}</td>
												<td>${item.product.title}</td>
												<td>${item.quantity}</td>
												<td>${item.unitPrice.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' })}</td>
												<td>${thanhTien.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' })}</td>
											</tr>
										`;
						});

						// Thêm hàng tổng cộng vào bảng
						modalContent += `
											</tbody>
											<tfoot>
												<tr>
													<th colspan="4" class="text-right">Tổng Cộng:</th>
													<th>${total.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' })}</th>
												</tr>
											</tfoot>
										</table>
									`;

						// Đặt nội dung vào modal
						document.querySelector('#orderDetailsModal .modal-body').innerHTML = modalContent;

						// Hiển thị modal
						$('#orderDetailsModal').modal('show');
					} else {
						showError("Không tìm thấy chi tiết đơn hàng");
					}
				},
				() => {
					showError("Có lỗi khi kết nối đến server");
				});
		} catch (error) {
			console.error(error);
			alert("Đã xảy ra lỗi khi lấy chi tiết đơn hàng.");
		}
	}

</script>