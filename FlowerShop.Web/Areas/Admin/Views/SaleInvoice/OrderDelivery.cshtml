@model IEnumerable<FlowerShop.DataAccess.Models.SaleInvoice>

@{
	ViewData["Title"] = "Đang giao hàng";
}

<h1>Danh sách đơn hàng đang giao</h1>

<table class="table">
	<thead>
		<tr>
			<th>
				Mã đơn hàng
			</th>
			<th>
				Tên khách hàng
			</th>
			<th>
				Ngày tạo hóa đơn
			</th>
			<th>
				Phương thức thanh toán
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model)
		{
			<tr id="hoadon-row-@item.Id">
				<td class="text-center" style="padding-right:60px">
					<!-- Thêm sự kiện click vào mã đơn hàng -->
					<a href="javascript:void(0);" onclick="ShowOrderDetails(@item.Id)">
						@Html.DisplayFor(modelItem => item.Id)
					</a>
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Customer.FullName)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.CreateDay)
				</td>

				<td>
					@Html.DisplayFor(modelItem => item.PaymentMethod.Name)
				</td>
				<td>
					<!-- Nút xác nhận -->
					<button onclick="Success(@item.Id)"
							class="btn btn-success btn-sm"
							data-toggle="tooltip"
							style="width: 110px;"
							title="Giao hàng thành công">
						<i class="fa-solid fa-check"></i> Thành công
					</button>
					<!-- Khoảng cách giữa các nút -->
					<span style="margin: 0 5px;"></span>
					<!-- Nút húy hóa đơn -->
					<button onclick="Fail(@item.Id)"
							class="btn btn-danger btn-sm"
							data-toggle="tooltip"
							style="width: 110px;"
							title="Giao hàng thất bại">
						<i class="fa-solid fa-frown"></i> Thất bại
					</button>
				</td>
			</tr>
		}
	</tbody>
</table>
@await Html.PartialAsync("_OrderDetailsModal")

<script>
	const Success = (id) => {
		showConfirm("Xác nhận đơn hàng giao thành công?", () => {
			const reqData = { id: id };

			fetchPost('/api/admin/quan-li-don-hang/giao-thanh-cong', reqData,
				(response) => {
					if (response.success) {
						// Xóa dòng trong bảng
						const row = document.getElementById('hoadon-row-' + id);
						if (row) {
							row.remove();
						}
						setTimeout(() => {
							showSuccess(response.message);
						}, 500);
					} else {
						showError(response.message);
					}
				},
				() => {
					showError("Có lỗi xảy ra khi kết nối đến máy chủ.");
				}
			);
		});
	};

	const Fail = (id) => {
		showConfirm("Xác nhận đơn hàng giao thất bại?", () => {
			const reqData = { id: id };

			fetchPost('/api/admin/quan-li-don-hang/giao-that-bai', reqData,
				(response) => {
					if (response.success) {
						// Xóa dòng trong bảng
						const row = document.getElementById('hoadon-row-' + id);
						if (row) {
							row.remove();
						}
						setTimeout(() => {
							showSuccess(response.message);
						}, 500);
					} else {
						showError(response.message);
					}
				},
				() => {
					showError("Có lỗi xảy ra khi kết nối đến máy chủ.");
				}
			);
		});
	};

	function ShowOrderDetails(orderId) {
		if (!orderId) {
			showError("Không tìm thấy đơn hàng");
			return;
		}
		try {
			// Lấy thông tin từ row được chọn
			const row = document.querySelector(`#hoadon-row-${orderId}`);
			const customerName = row.querySelector('td:nth-child(2)').innerText; // Tên khách hàng
			const createDate = row.querySelector('td:nth-child(3)').innerText;  // Ngày tạo hóa đơn

			// Đặt thông tin khách hàng và ngày tạo hóa đơn vào modal
			document.getElementById("customerName").innerText = customerName;
			document.getElementById("createDate").innerText = createDate;

			fetchGet(`/api/admin/quan-li-don-hang/chi-tiet-don-hang/${orderId}`,
				(response) => {
					console.log(response);

					if (response.length > 0) {
						let tableBody = "";
						let total = 0;

						response.forEach(item => {
							let thanhTien = item.unitPrice * item.quantity; // Thành tiền cho từng sản phẩm
							total += thanhTien; // Cộng dồn tổng tiền

							tableBody += `
															<tr>
																<td>${item.productId}</td>
																<td>${item.product.title}</td>
																<td>${item.quantity}</td>
																<td>${item.unitPrice.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' })}</td>
																<td>${thanhTien.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' })}</td>
															</tr>
														`;
						});

						// Cập nhật nội dung bảng và tổng cộng
						document.querySelector("#orderDetailsTable tbody").innerHTML = tableBody;
						document.getElementById("orderTotal").innerText = total.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });

						// Hiển thị modal
						$('#orderDetailsModal').modal('show');
					} else {
						showError("Không tìm thấy chi tiết đơn hàng");
					}
				},
				() => {
					showError("Có lỗi khi kết nối đến server");
				});
		} catch (error) {
			console.error(error);
			showError("Đã xảy ra lỗi khi lấy chi tiết đơn hàng.");
		}
	}
</script>