@model IEnumerable<FlowerShop.DataAccess.Models.SaleInvoice>

@{
	ViewData["Title"] = "Đã xác nhận";
}
<style>
	tbody tr {
		cursor: pointer;
		/* Thay đổi con trỏ chuột thành kiểu pointer */
	}

	tbody tr:hover {
		background-color: #f0f8ff;
		/* Màu nền nhạt khi lướt qua */
	}
</style>

<h1>Danh sách đơn hàng đã xác nhận</h1>
<div class="mb-3" style="position: relative; width: 440px;">
	<input type="text" id="searchBox" class="form-control pr-5"
		placeholder="Nhập tên khách hàng hoặc mã đơn hàng để tìm kiếm" oninput="searchOrders()" />
	<i class="fa fa-search"
		style="position: absolute; top: 50%; right: 10px; transform: translateY(-50%); color: gray;"></i>
</div>
<table class="table">
	<thead>
		<tr>
			<th>
				Mã đơn hàng
			</th>
			<th>
				Tên khách hàng
			</th>
			<th>
				Ngày tạo hóa đơn
			</th>
			<th>
				Phương thức thanh toán
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model)
		{
			<tr id="hoadon-row-@item.Id" ondblclick="ShowOrderDetails(@item.Id)">
				<td class="text-center" style="padding-right:60px">
					@Html.DisplayFor(modelItem => item.Id)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Customer.FullName)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.CreateDay)
				</td>

				<td>
					@Html.DisplayFor(modelItem => item.PaymentMethod.Name)
				</td>
				<td>
					<!-- Nút đang chuẩn bị giao hàng -->
					<button onclick="PreparedOrderById(@item.Id)" class="btn btn-info btn-sm" data-toggle="tooltip"
						style="width: 95px;" title="Chuẩn bị giao hàng">
						<i class="fa-solid fa-box-open"></i> Chuẩn bị
					</button>

					<!-- Khoảng cách giữa các nút -->
					<span style="margin: 0 5px;"></span>
					<!-- Nút húy hóa đơn -->
					<button onclick="CancelInvoiceById(@item.Id)" class="btn btn-danger btn-sm" data-toggle="tooltip"
						style="width: 95px;" title="Hủy đơn hàng">
						<i class="fa-solid fa-trash"></i> Hủy
					</button>
				</td>
			</tr>
		}
	</tbody>
</table>
@await Html.PartialAsync("_OrderDetailsModal")
@await Html.PartialAsync("_CancelOrderBox")
<script src="~/admin/js/orderModal.js"></script>

<script>
	// Hàm xác nhận sang chuẩn bị giap
	const PreparedOrderById = (id) => {
		showConfirm("Xác nhận chuyển đơn hàng sang trạng thái chuẩn bị giao?", () => {
			const reqData = { id: id };
			fetchPost('/api/admin/quan-li-don-hang/da-xac-nhan', reqData,
				(response) => {
					// Xóa dòng trong bảng
					const row = document.getElementById('hoadon-row-' + id);
					if (row) {
						row.remove();
					}
					setTimeout(() => {
						showSuccess(response.message);
					}, 500);

				},
				(res) => {
					showError(res.message);
				},
				() => {
					showError("Có lỗi xảy ra khi kết nối đến máy chủ.");
				}
			);
		});
	};

	//Hủy đơn hàng
	let currentOrderIdToCancel = null;
	const CancelInvoiceById = (id) => {
		// Lưu mã đơn hàng vào biến toàn cục
		currentOrderIdToCancel = id;

		// Hiển thị modal yêu cầu nhập lý do hủy
		$('#cancelOrderModal').modal('show');
	};
	const submitCancelOrder = () => {
		const cancelReason = document.getElementById("cancelReason").value.trim();

		if (!cancelReason) {
			showError("Bạn phải nhập lý do hủy.");
			return;
		}

		const reqData = { id: currentOrderIdToCancel, reason: cancelReason };

		fetchPost('/api/admin/quan-li-don-hang/huy', reqData,
			(response) => {
				const row = document.getElementById('hoadon-row-' + currentOrderIdToCancel);
				if (row) {
					row.remove();
				}
				$('#cancelOrderModal').modal('hide');
				setTimeout(() => {
					showSuccess(response.message);
				}, 500);
			},
			(response) => {
				showError(response.message);
			},
			() => {
				showError("Có lỗi xảy ra khi kết nối đến máy chủ.");
			}
		);
	};

	//Tìm kiếm
	const searchOrders = () => {
		const query = document.getElementById("searchBox").value.toLowerCase(); // Lấy giá trị tìm kiếm và chuyển thành chữ thường
		const rows = document.querySelectorAll("tbody tr"); // Lấy tất cả các dòng trong bảng

		rows.forEach(row => {
			const orderId = row.querySelector("td:nth-child(1)").innerText.toLowerCase(); // Lấy mã đơn hàng
			const customerName = row.querySelector("td:nth-child(2)").innerText.toLowerCase(); // Lấy tên khách hàng

			// Kiểm tra xem mã đơn hàng hoặc tên khách hàng có chứa chuỗi tìm kiếm hay không
			if (orderId.includes(query) || customerName.includes(query)) {
				row.style.display = ""; // Hiển thị dòng
			} else {
				row.style.display = "none"; // Ẩn dòng
			}
		});
	};
</script>