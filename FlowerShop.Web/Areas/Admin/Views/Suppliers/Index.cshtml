@model IEnumerable<FlowerShop.DataAccess.Models.Supplier>
@using FlowerShop.Common.Helpers;
@using Newtonsoft.Json;

@{
	ViewData["Title"] = "Danh sách nhà cung cấp";
	int stt = 1;
}
<style>
	tbody tr {
		cursor: pointer; /* Thay đổi con trỏ chuột thành kiểu pointer */
	}

		tbody tr:hover {
			background-color: #f0f8ff; /* Màu nền nhạt khi lướt qua */
		}
</style>

<h1>Danh sách các nhà cung cấp</h1>

<div class="mb-3" style="position: relative; width: 460px;">
	<input type="text" id="searchBox"
		   class="form-control pr-5"
		   placeholder="Nhập tên nhà cung cấp hoặc số điện thoại để tìm kiếm"
		   oninput="searchOrders()" />
	<i class="fa fa-search" style="position: absolute; top: 50%; right: 10px; transform: translateY(-50%); color: gray;"></i>
</div>

<table class="table">
	<thead>
		<tr>
			<th style="width: 20px">
				STT
			</th>
			<th style="width: 140px">
				Nhà cung cấp
			</th>
			<th style="width: 140px">
				SĐT
			</th>
			<th style="width: 170px">Trạng thái</th> <!-- Đổi tên cột tại đây -->

			<th style="width: 270px">
				Mô tả
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model)
		{
			<tr ondblclick="openModal(@item.Id)">
				<td>
					@(stt++)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.CompanyName)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Phone)
				</td>
				<td class="is-delete-icon">
					@if (item.IsDelete)
					{
						<i class="fa-solid fa-times" style="color: red; font-size: 28px; "></i>
					}
					else
					{
						<i class="fa-solid fa-check" style="color: green; font-size: 28px;"></i>
					}
				</td>

				<td>
					@Html.DisplayFor(modelItem => item.Description)
				</td>
				<td>
					<a asp-action="Edit" 
						asp-area="Admin" 
						asp-controller="Suppliers" 
						asp-route-id="@item.Id"
						data-toggle="tooltip"
						title="Sửa thông tin">
						<i class="fa-solid fa-pencil" style="color: #FFCC99; width: 20px; height: 30px"></i>
					</a>|

					<!-- Nút ngửng nhận hàng -->
					<button onclick="DeleteSupplierById(@item.Id)"
							class="bg-transparent"
							style="border: none;"
							data-toggle="tooltip"
							title="Ngừng nhận hàng">
					<i class="fa-solid fa-trash" style="color:red;"></i>				
					</button>
				</td>
			</tr>
		}
	</tbody>
</table>


<!-- Modal -->
<div class="modal fade" id="supplierModal" tabindex="-1" aria-labelledby="supplierModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<!-- Tiêu đề modal -->
			<div class="modal-header">
				<h5 class="modal-title" id="supplierModalLabel">Thông tin nhà cung cấp</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Đóng">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<!-- Nội dung modal -->
			<div class="modal-body">
				<div id="modalSupplierImageWrapper" style="text-align: center;">
					<img id="modalSupplierImage" src="" alt="Supplier Image" style="width: 150px; height: 150px; object-fit: cover; border-radius: 10px;" />
				</div>
				<p><strong>Nhà cung cấp:</strong> <span id="modalSupplierName"></span></p>
				<p><strong>TaxCode:</strong> <span id="modalTaxCode"></span></p>
				<p><strong>Email:</strong> <span id="modalEmail"></span></p>
				<p><strong>Số điện thoại:</strong> <span id="modalSupplierPhone"></span></p>
				<p><strong>Địa chỉ:</strong> <span id="modalAddress"></span></p>
				<p><strong>Tình trạng cung cấp:</strong> <span id="modalStatus"></span></p>
				<p><strong>Mô tả:</strong> <span id="modalSupplierDescription"></span></p>
			</div>
			<!-- Footer modal -->
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
			</div>
		</div>
	</div>
</div>

<script>
	const DeleteSupplierById = (id) => {
		const currentIsDelete = getIsDeleteValue(id);
		if (currentIsDelete == true) {
			showError("Nhà cung cấp đã tạm ngưng rồi");
			return;
		}
		showConfirm("Bạn có muốn tạm ngưng nhận hàng từ nhà cung cấp này không?", () => {
			const reqData = { id: id };

			fetchDelete('/api/admin/quan-li-nha-cung-cap/delete', reqData,
				(response) => {
					// Cập nhật biểu tượng IsDelete
					const iconCell = document.querySelector(`button[onclick="DeleteSupplierById(${id})"]`)
						.closest('tr')
						.querySelector('.is-delete-icon');
					if (iconCell) {
						iconCell.innerHTML = `<i class="fa-solid fa-times" style="color: red; font-size:28px;"></i>`;
					}
					setTimeout(() => {
						showSuccess(response.message);
					}, 500);
				},
				(respone) => {
					showError(respone.message);
				},
				() => {
					showError("Có lỗi xảy ra khi kết nối đến máy chủ.");
				}
			);
		});
	};

	//Lấy thuộc tính IsDelete của ô được chọn
	const getIsDeleteValue = (id) => {
		const button = document.querySelector(`button[onclick="DeleteSupplierById(${id})"]`);
		if (button) {
			// Lấy hàng chứa nút
			const tr = button.closest('tr');
			if (tr) {
				// Lấy ô chứa IsDelete
				const isDeleteCell = tr.querySelector('.is-delete-icon');
				if (isDeleteCell) {
					const hasTimesIcon = isDeleteCell.querySelector('.fa-times') !== null;
					return hasTimesIcon;
				}
			}
		}
		return null; // Trường hợp không tìm thấy
	};

	//Tìm kiếm nhà cung cấp
	const searchOrders = () => {
		const query = document.getElementById("searchBox").value.toLowerCase(); // Lấy giá trị tìm kiếm và chuyển thành chữ thường
		const rows = document.querySelectorAll("tbody tr"); // Lấy tất cả các dòng trong bảng

		rows.forEach(row => {
			const sDT = row.querySelector("td:nth-child(3)").innerText.toLowerCase(); // Lấy mã đơn hàng
			const customerName = row.querySelector("td:nth-child(2)").innerText.toLowerCase(); // Lấy tên khách hàng

			// Kiểm tra xem mã đơn hàng hoặc tên khách hàng có chứa chuỗi tìm kiếm hay không
			if (sDT.includes(query) || customerName.includes(query)) {
				row.style.display = ""; // Hiển thị dòng
			} else {
				row.style.display = "none"; // Ẩn dòng
			}
		});
	};

	//Mở viewModal
	const openModal = (id) => {
		const row = document.querySelector(`tr[ondblclick="openModal(${id})"]`);
		if (row) {
			row.style.backgroundColor = "#f0f8ff"; // Màu nhạt báo hiệu
			setTimeout(() => {
				row.style.backgroundColor = ""; // Khôi phục màu ban đầu
			}, 2000);
		}
		fetchGet(`/api/admin/quan-li-nha-cung-cap/chi-tiet-nha-cung-cap/${id}`,
			(data) => {
				console.log(data);
				showModalWithData(data);
			},
			(error) => {
				showError(error.message);
			},
			() => {
				showError("Có lỗi xảy ra khi kết nối đến máy chủ.");
			}
		);
	};

	const showModalWithData = (data) => {
		// Kiểm tra nếu data là mảng thì lấy phần tử đầu tiên
		const supplier = Array.isArray(data) ? data[0] : data;

		// Xử lý giá trị images
		let images;
		try {
			if (supplier.images && supplier.images.startsWith("[")) {
				// Nếu là JSON hợp lệ (mảng), giải mã
				images = JSON.parse(supplier.images);
			} else {
				// Nếu không, coi chuỗi là tên ảnh
				images = [supplier.images];
			}
		} catch (error) {
			console.error("Error parsing images JSON:", error);
			images = ["default-supplier.png"]; // Sử dụng ảnh mặc định nếu lỗi
		}
		console.log("Images array:", images);

		// Lấy hình ảnh đầu tiên
		const firstImage = images[0] || "default-supplier.png";
		console.log("First image:", firstImage);

		// Cập nhật hình ảnh trong modal
		const supplierImage = document.getElementById("modalSupplierImage");
		supplierImage.src = `/images/suppliers/${firstImage}`;
		supplierImage.alt = supplier.companyName;
		console.log("Image URL:", supplierImage.src);

		// Hiển thị dữ liệu trong modal
		document.getElementById('modalSupplierName').innerText = supplier.companyName;
		document.getElementById('modalTaxCode').innerText = supplier.taxCode;
		document.getElementById('modalEmail').innerText = supplier.email;
		document.getElementById('modalSupplierPhone').innerText = supplier.phone;
		document.getElementById('modalAddress').innerText = supplier.address;
		document.getElementById('modalStatus').innerText = supplier.isDelete ? "Ngừng cung cấp" : "Đang cung cấp";
		document.getElementById('modalSupplierDescription').innerText = supplier.description;

		//Hiển thị modalview
		$('#supplierModal').modal('show');
	};

	// Ngăn chặn sự kiện double-click trên các nút và liên kết trong dòng
	document.querySelectorAll('table tr td button, table tr td a').forEach(element => {
		element.addEventListener('dblclick', (event) => {
			event.stopPropagation();
		});
	});

</script>