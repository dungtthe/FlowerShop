@model IEnumerable<FlowerShop.Web.ViewModels.AppUserViewModel>
@using Newtonsoft.Json;
@using FlowerShop.Common.Helpers;

@{
    ViewData["Title"] = "Index";
}

<h1>Quản lí nhân viên</h1>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FullName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BirthDay)
            </th>
            
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Images)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsLock)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BirthDay)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @{
                        string[] listImg = item.Images != null
                        ? JsonConvert.DeserializeObject<string[]>(item.Images)
                        : new string[] { "no_img.png" };

                        var firstImg = listImg[0];
                    }
                    <img src="@Url.Content("~/images/products/" + firstImg)" alt="Product Image" style="width: 70px; height: 70px; object-fit: cover;" />
                </td>
                <td>
                    @if (item.IsLock)
                    {
                        <i class="fa-solid fa-lock icon-lock" style="color: red"></i>
                    }
                    else
                    {
                        <i class="fa-solid fa-unlock icon-unlock" style="color: green;"></i>
                    }
                </td>

                <td>
                    <a asp-action="Edit" asp-area="Admin" asp-controller="AppUser" asp-route-id="@item.Id">
                        <i class="fa-solid fa-pencil" style="color: #FFCC99; width: 20px; height: 30px"></i>
                    </a>|
                    <button onclick="LockCustomerById(@item.Id)" class="bg-transparent" style="border: none;">
                        @if (item.IsLock)
                        {
                            <i class="fa-solid fa-lock" style="color:red;"></i>
                        }
                        else
                        {
                            <i class="fa-solid fa-unlock" style="color:green;"></i>
                        }
                    </button>
                    
                </td>
            </tr>
        }
    </tbody>
</table>
@* căn trôn k + d *@

<script>
    //Lấy id nhân viên được chọn
    const getIsLockValue = (id) => {
        const button = document.querySelector(`button[onclick="LockCustomerById(${id})"]`);
        if (button) {
            const tr = button.closest('tr');
            if (tr) {
                const isLockCell = tr.querySelector('.is-lock');
                if (isLockCell) {
                    const hasLockIcon = isLockCell.querySelector('.icon-lock') !== null;
                    return hasLockIcon;
                }
            }
        }
        return null; // Trường hợp không tìm thấy
    };


    // Hàm để khóa nhân viên
    const LockCustomerById = (id) => {
        const currentIsLock = getIsLockValue(id);
        if (currentIsLock === true) {
            showError("Tài khoản nhân viên đã bị khóa.");
            return;
        }
        showConfirm("Bạn có muốn khóa nhân viên này không?", () => {
            const reqData = { id: id };

            fetchDelete('/api/admin/quan-li-khach-hang/delete', reqData,
                (response) => {
                    if (response.success) {
                        showSuccess(response.message);
                        // Cập nhật giá trị IsLock
                        const iconCell = document.querySelector(`button[onclick="LockCustomerById(${id})"]`)
                            .closest('tr')
                            .querySelector('.is-lock');
                        if (iconCell) {
                            iconCell.innerHTML = '<i class="fa-solid fa-lock icon-lock" style ="color:red"></i>';
                            iconCell.setAttribute('data-is-lock', 'true');
                        }

                        // Cập nhật icon của nút khóa
                        const lockButton = document.querySelector(`button[onclick="LockCustomerById(${id})"]`);
                        if (lockButton) {
                            lockButton.innerHTML = '<i class="fa-solid fa-lock icon-lock" style ="color:red"></i>';
                        }
                    } else {
                        showError(response.message);
                    }
                },
                () => {
                    showError("Có lỗi xảy ra khi kết nối đến máy chủ.");
                }
            );
        });
    };
</script>


@* @section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            // Ngăn dropdown đóng lại khi chọn checkbox
            $('.dropdown-menu').on('click', function (e) {
                e.stopPropagation();
            });

            $('.dropdown-menu input[type="checkbox"]').on('change', function () {
                let selected = [];
                $('.dropdown-menu input[type="checkbox"]:checked').each(function () {
                    selected.push($(this).next().text().trim());
                });
            });
        });
    </script>
} *@