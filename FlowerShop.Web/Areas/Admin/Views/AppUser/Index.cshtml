@model IEnumerable<FlowerShop.Web.ViewModels.AppUserViewModel>
@using Newtonsoft.Json;
@using FlowerShop.Common.Helpers;

@{
	ViewData["Title"] = "Index";
}

<h1>Quản lí nhân viên</h1>

<table class="table">
	<thead>
		<tr>
			<th>
				@Html.DisplayNameFor(model => model.FullName)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.BirthDay)
			</th>

			<th>
				@Html.DisplayNameFor(model => model.Email)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Images)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.IsLock)
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model)
		{
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.FullName)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.BirthDay)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Email)
				</td>
				<td>
					@{
						string[] listImg = item.Images != null
						? JsonConvert.DeserializeObject<string[]>(item.Images)
						: new string[] { "no_img.png" };

						var firstImg = listImg[0];
					}
					<img src="@Url.Content("~/images/users/" + firstImg)" alt="Product Image" style="width: 70px; height: 70px; object-fit: cover;" />
				</td>
				<td class="is-lock" data-is-lock="@item.IsLock">
					@if (item.IsLock)
					{
						<i class="fa-solid fa-lock icon-lock" style="color: red"></i>
					}
					else
					{
						<i class="fa-solid fa-unlock icon-unlock" style="color: green;"></i>
					}
				</td>

				<td>
					<a asp-action="Edit" asp-area="Admin" asp-controller="AppUser" asp-route-id="@item.Id">
						<i class="fa-solid fa-pencil" style="color: #FFCC99; width: 20px; height: 30px"></i>
					</a>|
					<button data-username="@item.Username" class="bg-transparent" style="border: none;" onclick="LockCustomer('@item.Username')">
						@if (item.IsLock)
						{
							<i class="fa-solid fa-lock" style="color:red;"></i>
						}
						else
						{
							<i class="fa-solid fa-unlock" style="color:green;"></i>
						}
					</button>

				</td>
			</tr>
		}
	</tbody>
</table>

<script>
	//Lấy username nhân viên được chọn
	const getIsLockValue = (username) => {
		const button = document.querySelector(`button[data-username="${username}"]`);
		if (button) {
			const tr = button.closest('tr');
			if (tr) {
				const isLockCell = tr.querySelector('.is-lock');
				if (isLockCell) {
					const hasLockIcon = isLockCell.querySelector('.icon-lock') !== null;
					return hasLockIcon;
				}
			}
		}
		return null; // Trường hợp không tìm thấy
	};

	// Hàm để khóa nhân viên
	const LockCustomer = (username) => {
		const currentIsLock = getIsLockValue(username);
		if (currentIsLock === true) {
			showError("Tài khoản nhân viên đã bị khóa.");
			return;
		}

		showConfirm("Bạn có muốn khóa nhân viên này không?", () => {
			const reqData = { username: username };
			console.log("Dữ liệu gửi đi:", reqData);
			fetchPost(
				`/api/admin/quan-li-nhan-vien/lock/${username}`,
				reqData,
				(response) => {
					// Cập nhật view
					const iconCell = document.querySelector(`button[data-username="${username}"]`)
						.closest('tr')
						.querySelector('.is-lock');
					if (iconCell) {
						iconCell.innerHTML = '<i class="fa-solid fa-lock icon-lock" style="color:red"></i>';
						iconCell.setAttribute('data-is-lock', 'true');
					}
					// Cập nhật icon của nút khóa
					const lockButton = document.querySelector(`button[data-username="${username}"]`);
					if (lockButton) {
						lockButton.innerHTML = '<i class="fa-solid fa-lock" style="color:red;"></i>';
					}
					setTimeout(() => {
						showSuccess(response.message);
					}, 500);
				},
				(respone) => {
					showError(respone.message);
				},
				() => {
					showError("Có lỗi xảy ra khi kết nối đến máy chủ.");
				}
			);
		});
	};

</script>

@* @section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            // Ngăn dropdown đóng lại khi chọn checkbox
            $('.dropdown-menu').on('click', function (e) {
                e.stopPropagation();
            });

            $('.dropdown-menu input[type="checkbox"]').on('change', function () {
                let selected = [];
                $('.dropdown-menu input[type="checkbox"]:checked').each(function () {
                    selected.push($(this).next().text().trim());
                });
            });
        });
    </script>
} *@