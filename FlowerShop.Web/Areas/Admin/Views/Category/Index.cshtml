@using FlowerShop.DataAccess.Models
@model List<Category>

<h2>Danh sách danh mục</h2>

<!-- Thêm thanh filter -->
<select id="filter" onchange="filterCategories(event)" class="form-select mb-3" style="width: 200px;">
    <option value="all">Tất cả</option>
    <option value="inStock">Trong kho</option>
    <option value="forSale">Để bán</option>
</select>

<table class="table">
    <thead>
        <tr>
            <th>Tên danh mục</th>
            <th>Trạng thái</th>
            <th>Thao tác</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var category in Model.Where(c => c.ParentCategoryId == null))
        {
            <!-- Hiển thị danh mục cha -->
            <tr class="parent-category" data-status="@category.IsCategorySell" onclick="toggleSubCategories(@category.Id)">
                <td>@category.Name</td>
                <td>@(category.IsCategorySell ? "Để bán" : "Trong kho")</td>
                <td>
                    <div class="d-flex align-items-center gap-2">
                        <a href="@Url.Action("Edit", "Category", new { id = category.Id })" class="btn btn-link btn-sm d-flex align-items-center justify-content-center">
                            <i class="fa-solid fa-pencil" style="color: #FFCC99;"></i>
                        </a>
                        <button onclick="RemoveCategory(@category.Id)" class="btn btn-danger btn-sm d-flex align-items-center justify-content-center">
                            <i class="fa-solid fa-trash"></i>
                        </button>
                    </div>

                </td>
            </tr>

            <!-- Hiển thị danh mục con -->
            @if (category.SubCategories != null)
            {
                @foreach (var subCategory in category.SubCategories)
                {
                    <tr class="sub-category" data-status="@subCategory.IsCategorySell" data-parent="@category.Id" style="display: none;">
                        <td style="padding-left: 30px;">↳ @subCategory.Name</td>
                        <td>@(subCategory.IsCategorySell ? "Để bán" : "Trong kho")</td>
                        <td>
                            <div class="d-flex align-items-center gap-2">
                                <a href="@Url.Action("Edit", "Category", new { id = subCategory.Id })" class="btn btn-link btn-sm d-flex align-items-center justify-content-center">
                                    <i class="fa-solid fa-pencil" style="color: #FFCC99;"></i>
                                </a>
                                <button onclick="RemoveCategory(@subCategory.Id)" class="btn btn-danger btn-sm d-flex align-items-center justify-content-center">
                                    <i class="fa-solid fa-trash"></i>
                                </button>
                            </div>
                        </td>
                    </tr>
                }

            }
        }
    </tbody>
</table>

<script>
    // Hàm để toggle hiển thị các danh mục con khi nhấn vào danh mục cha
    function toggleSubCategories(categoryId) {
        const subCategoryRows = document.querySelectorAll(`.sub-category[data-parent="${categoryId}"]`);
        subCategoryRows.forEach(row => {
            row.style.display = row.style.display === "none" ? "table-row" : "none";
        });
    }

    // Hàm lọc danh mục
    function filterCategories(e) {
        let choice = e.target.value;
        const rows = document.querySelectorAll("tr.parent-category, tr.sub-category");

        if (choice === "all") {
            rows.forEach(row => {
                if (row.classList.contains("sub-category")) {
                    row.style.display = "none"; // Ẩn danh mục con mặc định
                } else {
                    row.style.display = "table-row";
                }
            });
        } else if (choice === "inStock") {
            rows.forEach(row => {
                if (row.getAttribute("data-status") === "0") {
                    row.style.display = "table-row";
                } else {
                    row.style.display = "none";
                }
            });
        } else if (choice === "forSale") {
            rows.forEach(row => {
                if (row.getAttribute("data-status") === "1") {
                    row.style.display = "table-row";
                } else {
                    row.style.display = "none";
                }
            });
        }
    }


    const RemoveCategory = (id) => {
        showConfirm("Bạn có muốn xóa danh mục này không?", () => {
            const reqData = { id: id };
            fetchDelete('/api/admin/quan-li-dm/delete', reqData,
                (responeData) => {
                    showSuccess(responeData.message);
                    setTimeout(() => {
                        location.reload();
                    }, 2000);

                }, (responeData) => {
                    showError(responeData.message);
                }, () => {
                    showError("Có lỗi xảy ra");
                });
        });
    }



    // Khởi tạo: đặt giá trị filter mặc định và áp dụng lọc
    window.onload = () => {
        const filterSelect = document.getElementById("filter");
        filterSelect.value = "all";
        filterCategories({ target: filterSelect });
    };
</script>
